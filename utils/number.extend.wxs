// 加法
var add = function (v1, v2) {
  var data = getAreas(v1, v2);
  return (data.v1Long + data.v2Long) / Math.pow(10, data.maxLen)
};

// 减法
var sub = function (v1, v2) {
  return add(v1, -v2);
};

// 乘法
var mul = function (v1, v2, fixed = 2) {
  var data = getAreas(v1, v2);
  return parseFloat(data.v1Long2 * data.v2Long2 / Math.pow(10, data.lenCount)).toFixed(fixed)
};

// 除法
var div = function (v1, v2, fixed = 2) {
  return parseFloat(v1 / v2).toFixed(fixed);
};


// 获取基础参数
function getAreas(v1, v2) {
  var len1 = 0, len2 = 0; // 小数位数

  var arr1 = v1.toString().split(".");
  var arr2 = v2.toString().split(".");

  if(arr1.length > 1){
    len1 = arr1[1].length;
  }
  if(arr2.length > 1){
    len2 = arr2[1].length;
  }

  var maxLen = Math.max(len1, len2);
  return {
    maxLen: maxLen, // 最大小数位数
    lenCount: len1 + len2, // 总共的小数位数
    len1: len1,
    len2: len2,
    v1Long: toLong(v1, maxLen), // 最大小数位数后的整数
    v1Long2: v1.toString().replace('.', ''), // 去小数位数后的整数
    v2Long: toLong(v2, maxLen), // 
    v2Long2: v2.toString().replace('.', ''),
  }
}

// 转换为整数型
function toLong(val, max) {
  return parseInt(val.toFixed(max).replace('.', ''), 10);
}

module.exports = {
  add: function (v1 = 0, v2 = 0) {
    return add(v1, v2);
  },
  sub: function (v1 = 0, v2 = 0) {
    return sub(v1, v2);
  },
  mul: function (v1 = 0, v2 = 0, fixed = 2) {
    return mul(v1, v2, fixed);
  },
  div: function (v1 = 0, v2 = 0, fixed = 2) {
    return div(v1, v2, fixed);
  }
};